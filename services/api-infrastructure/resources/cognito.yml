Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: ${self:custom.stage}-${self:custom.projectName}Pool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: user_role
          AttributeDataType: String
          StringAttributeConstraints:
            MinLength: 4
            MaxLength: 256
        - Name: university_id
          AttributeDataType: String
          StringAttributeConstraints:
            MinLength: 4
            MaxLength: 256
            
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: ${self:custom.stage}-${self:custom.projectName}PoolClient
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false
  
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: ${self:custom.stage}-${self:custom.projectName}IdentityPool
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: 
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: [ "CognitoUserPool", "ProviderName" ]

  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: CognitoIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [CognitoAuthRole, Arn]

  CognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud':
                  Ref: CognitoIdentityPool
              'ForAnyValue:StringLike':
                'cognito-identity.amazonaws.com:amr': authenticated

  CognitoAuthorizedPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: 'CognitoAuthorizedPolicy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - 'mobileanalytics:PutEvents'
                - 'cognito-sync:*'
                - 'cognito-idp:*'
                - 'iam:ListRoles'
                - 'iam:ListOpenIdConnectProviders'
                - 'sns:ListPlatformApplications'
                - 'cognito-identity:*'
              Resource: '*'
            - Effect: 'Allow'
              Action: 'iam:CreateServiceLinkedRole'
              Resource: '*'
              Condition:
                StringEquals:
                  'iam:AWSServiceName': 'email.cognito-idp.amazonaws.com'
            - Effect: 'Allow'
              Action:
                - 'iam:DeleteServiceLinkedRole'
                - 'iam:GetServiceLinkedRoleDeletionStatus'
              Resource: 'arn:aws:iam::*:role/aws-service-role/email.cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdpEmail*'
        Roles:
          - Ref: CognitoAuthRole

Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient

  IdentityPoolId:
    Value:
      Ref: CognitoIdentityPool

  CognitoAuthRole:
    Value:
      Ref: CognitoAuthRole
    Export:
      Name: CognitoAuthRole